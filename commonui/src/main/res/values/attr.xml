<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="TickView">
        <!--没有选中的基调颜色-->
        <attr name="uncheck_base_color" format="color" />
        <!--选中后的基调颜色-->
        <attr name="check_base_color" format="color" />
        <!--选中后钩的颜色-->
        <attr name="check_tick_color" format="color" />
        <!--圆的半径-->
        <attr name="radius" format="dimension" />
        <!--动画执行的速度-->
        <attr name="rate">
            <enum name="slow" value="0" />
            <enum name="normal" value="1" />
            <enum name="fast" value="2" />
        </attr>
        <attr name="clickable" format="boolean" />
    </declare-styleable>
    <!--label文字内容-->
    <attr name="label" format="string" />
    <!--是否展示*，提示必填-->
    <attr name="required" format="boolean" />
    <!--输入框最大文本输入长度-->
    <attr name="maxLength" format="integer" />
    <!--开始年度，例如：2025-->
    <attr name="startYear" format="integer" />
    <!--结束年度，例如：2027-->
    <attr name="endYear" format="integer" />
    <!--是否展示表单底部边框-->
    <attr name="bottomBorder" format="boolean" />
    <!--底部边框颜色-->
    <attr name="borderBottomColor" format="reference|color" />
    <!--底部边框左侧margin-->
    <attr name="borderBottomStartMargin" format="dimension" />
    <!--当主文本超过一行的时候，需要设置margin不然就会导致多个控件上下挤在一起-->
    <attr name="defaultTextMargin" format="dimension" />
    <!--输入框高度，当对齐方式为top的时候起作用-->
    <attr name="inputHeight" format="dimension" />
    <!--多行文本输入框内部padding-->
    <attr name="editAreaPadding" format="dimension" />
    <!--底部边框右侧margin-->
    <attr name="borderBottomEndMargin" format="dimension" />
    <!--label文字左侧margin-->
    <attr name="labelStartMargin" format="dimension" />
    <!--label文字右侧margin-->
    <attr name="labelEndMargin" format="dimension" />
    <!--正文文字左侧margin-->
    <attr name="textStartMargin" format="dimension" />
    <!--正文文字右侧margin-->
    <attr name="textEndMargin" format="dimension" />
    <!--空白内容时，占用的文字颜色-->
    <attr name="emptyTextColor" format="reference|color" />
    <!--label文字颜色-->
    <attr name="labelTextColor" format="reference|color" />
    <!--确认按钮颜色-->
    <attr name="confirmTextColor" format="reference|color" />
    <!--label文字大小-->
    <attr name="formLabelTextSize" format="dimension" />
    <!--输入框、选择框、文本内容文字颜色-->
    <attr name="formTextColor" format="reference|color" />
    <!--输入框、选择框、文本内容文字大小-->
    <attr name="formTextSize" format="dimension" />
    <!--*号大小-->
    <attr name="formRequiredSize" format="dimension" />
    <!--弹框整体背景样式，drawable-->
    <attr name="dialogBgDrawable" format="reference" />
    <!--input输入框样式，drawable-->
    <attr name="inputDrawable" format="reference" />

    <declare-styleable name="FormUI">
        <!--默认的添加图标资源-->
        <attr name="fileAddSrc" format="reference"/>
        <!--文件前面的图标-->
        <attr name="fileDrawable" format="reference"/>
        <!--是否展示文件前面的图标-->
        <attr name="isShowFileDrawable" format="boolean"/>
        <!--空白内容时，占用的文字颜色-->
        <attr name="emptyTextColor"/>
        <!--矩形框圆角大小-->
        <attr name="mediaItemRadius" format="dimension"/>
        <!--是否默认开启压缩-->
        <attr name="compress" format="boolean"/>
        <!--压缩图片大小，单位kb-->
        <attr name="compressImageSize" format="integer" />
        <!--最大可选数量-->
        <attr name="maxCount" format="integer"/>
        <!--拍摄视频最大时长，单位：秒，默认为30秒-->
        <attr name="maxVideoDuration" format="integer"/>
        <!--一列显示几个-->
        <attr name="columnCount" format="integer"/>
        <!--列之间间距-->
        <attr name="columnMargin" format="dimension"/>
        <!--字段名，AttachmentUtil自动转换-->
        <attr name="field" format="string"/>
        <!--添加图片视频的时候，框框背景色-->
        <attr name="bgColor" format="color" />
        <!--媒体样式-->
        <attr name="mediaType">
            <!--相册、拍照兼具-->
            <enum name="camera_album" value="3" />
            <!--仅拍照或录像-->
            <enum name="camera" value="1" />
            <!--仅相册-->
            <enum name="album" value="2" />
            <!--图片、视频同时选择时的参数，仅拍照-->
            <enum name="media_camera" value="1" />
            <!--图片、视频同时选择时的参数，仅摄像-->
            <enum name="media_shoot" value="2" />
            <!--图片、视频同时选择时的参数，仅相册-->
            <enum name="media_album" value="3" />
            <!--图片、视频同时选择时的参数，仅拍照摄像-->
            <enum name="media_camera_shoot" value="4" />
            <!--图片、视频同时选择时的参数，相册、拍照、录像都显示-->
            <enum name="media_camera_shoot_album" value="5" />
        </attr>
        <!--视频压缩质量-->
        <attr name="compress_video" format="enum">
            <!--高质量，即压缩比例小-->
            <enum name="high" value="1" />
            <!--中等质量-->
            <enum name="medium" value="2" />
            <!--低质量，即压缩比例最大-->
            <enum name="low" value="3" />
        </attr>
        <!--label文字对齐方式，默认为左侧-->
        <attr name="labelAlign" format="enum">
            <enum name="left" value="0" />
            <enum name="top" value="1" />
        </attr>
        <!--正文文字对齐方式，默认为右侧，只有labelAlign在左侧时才有效-->
        <attr name="textAlign" format="enum">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
        <!-- Default text typeface style. -->
        <attr name="labelTextStyle">
            <flag name="normal" value="0" />
            <flag name="bold" value="1" />
        </attr>
        <!--label文字内容-->
        <attr name="label" />
        <!--下拉框图标-->
        <attr name="selectionIcon" format="reference"/>
        <!--占位图片-->
        <attr name="placeholderImage" format="reference"/>
        <!--加载错误图片-->
        <attr name="errorImage" format="reference"/>
        <!--是否必填，也就是是否显示必填的*号-->
        <attr name="required" />
        <!--是否调用uri的持久化权限takeUriPermission，默认为true-->
        <attr name="requireUriPermission" format="boolean" />
        <!--是否显示协议dialog-->
        <attr name="protocolDialog" format="boolean" />
        <!--媒体选择总数显示提示文字的大小-->
        <attr name="formCountLabelTextSize" format="dimension"/>
        <!--媒体选择总数显示提示文字颜色-->
        <attr name="countLabelTextColor" format="reference|color" />
        <!--是否显示媒体选择总数显示提示文字-->
        <attr name="showCountLabel" format="boolean" />
        <!--label文字大小-->
        <attr name="formLabelTextSize"/>
        <!--正文文字大小-->
        <attr name="formTextSize"/>
        <!--暂无数据占位布局的文字大小-->
        <attr name="emptyTextSize" format="dimension"/>
        <!--暂无数据占位布局的文字内容-->
        <attr name="emptyText" format="string"/>
        <!--FormFile中的限定文件格式，英文逗号分割-->
        <attr name="fileType" format="string"/>
        <!--input输入框，最大输入长度，默认不限制-->
        <attr name="maxLength"/>
        <!--*号文字大小-->
        <attr name="formRequiredSize"/>
        <!--是否展示底部边框-->
        <attr name="bottomBorder" />
        <!--label文字颜色-->
        <attr name="labelTextColor" />
        <!--正文文字颜色-->
        <attr name="formTextColor" />
        <!--FormFile中列表中文字颜色-->
        <attr name="itemTextColor" />
        <!--正文默认的边距，防止跟边框重合-->
        <attr name="defaultTextMargin" />
        <!--底部边框颜色-->
        <attr name="borderBottomColor" />
        <!--底部边框左边margin-->
        <attr name="borderBottomStartMargin" />
        <!--底部边框右边margin-->
        <attr name="borderBottomEndMargin" />
        <!--输入框高度-->
        <attr name="inputHeight" />
        <!--多行文本输入框，内部padding-->
        <attr name="editAreaPadding" />
        <!--label文字左侧margin-->
        <attr name="labelStartMargin" />
        <!--label文字右侧margin-->
        <attr name="labelEndMargin" />
        <!--正文文字左侧margin-->
        <attr name="textStartMargin" />
        <!--正文文字右侧margin-->
        <attr name="textEndMargin" />
        <!--确认按钮文字颜色-->
        <attr name="confirmTextColor" />
        <!--开始年份-->
        <attr name="startYear" />
        <!--结束年份-->
        <attr name="endYear" />
        <!--dialog背景-->
        <attr name="dialogBgDrawable"/>
        <!--input输入框背景-->
        <attr name="inputDrawable"/>
        <!--日历选择样式-->
        <attr name="datePickModel" format="enum">
            <!--年月日-->
            <enum name="YEAR_MONTH_DAY" value="0" />
            <!--年月-->
            <enum name="YEAR_MONTH" value="1" />
            <!--年-->
            <enum name="YEAR" value="2" />
            <!--年月日时分秒-->
            <enum name="YEAR_MONTH_DAY_HOUR_MINUTE_SECOND" value="3" />
            <!--年月日时分-->
            <enum name="YEAR_MONTH_DAY_HOUR_MINUTE" value="4" />
            <!--年月日时-->
            <enum name="YEAR_MONTH_DAY_HOUR" value="5" />
            <!--时分秒-->
            <enum name="HOUR_MINUTE_SECOND" value="6" />
            <!--时分-->
            <enum name="HOUR_MINUTE" value="7" />
        </attr>
        <!--输入框输入的样式，可以自动格式化，但是目前未实现次功能-->
        <attr name="formatText" format="enum">
            <enum name="normal" value="0" />
            <enum name="Integer" value="1" />
            <enum name="Double" value="2" />
            <enum name="Double_00" value="3" />
            <enum name="Float" value="4" />
            <enum name="Long" value="5" />
        </attr>
        <!--分隔符-->
        <attr name="separator" format="string" />
        <!--时间格式化的样式，例如：yyyy-MM-dd-->
        <attr name="format" format="string" />
        <!--开始时间格式化的样式，例如：yyyy-MM-dd-->
        <attr name="startFormat" format="string" />
        <!--截止时间格式化的样式，例如：yyyy-MM-dd-->
        <attr name="endFormat" format="string" />
        <!--提示文字-->
        <attr name="hint" format="string" />
        <!--显示行数-->
        <attr name="line" format="integer" />
        <!--小数点位数-->
        <attr name="digits" format="integer" />
        <!-- 引用原生属性 -->
        <attr name="formInputType">
            <!-- There is no content type.  The text is not editable. -->
            <flag name="none" value="0x00000000" />
            <!-- Just plain old text.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. -->
            <flag name="text" value="0x00000001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 request capitalization of all characters.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. -->
            <flag name="textCapCharacters" value="0x00001001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 request capitalization of the first character of every word.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. -->
            <flag name="textCapWords" value="0x00002001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 request capitalization of the first character of every sentence.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. -->
            <flag name="textCapSentences" value="0x00004001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 request auto-correction of text being input.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. -->
            <flag name="textAutoCorrect" value="0x00008001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 specify that this field will be doing its own auto-completion and
                 talking with the input method appropriately.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. -->
            <flag name="textAutoComplete" value="0x00010001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 allow multiple lines of text in the field.  If this flag is not set,
                 the text field will be constrained to a single line.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}.

                 Note: If this flag is not set and the text field doesn't have max length limit, the
                 framework automatically set maximum length of the characters to 5000 for the
                 performance reasons.
                 -->
            <flag name="textMultiLine" value="0x00020001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 indicate that though the regular text view should not be multiple
                 lines, the IME should provide multiple lines if it can.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. -->
            <flag name="textImeMultiLine" value="0x00040001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 indicate that the IME should not show any
                 dictionary-based word suggestions.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. -->
            <flag name="textNoSuggestions" value="0x00080001" />
            <!-- Can be combined with <var>text</var> and its variations to
                 indicate that if there is extra information, the IME should provide
                 {@link android.view.inputmethod.TextAttribute}.  Corresponds to
                 {@link android.text.InputType#TYPE_TEXT_FLAG_ENABLE_TEXT_CONVERSION_SUGGESTIONS}. -->
            <flag name="textEnableTextConversionSuggestions" value="0x00100001" />
            <!-- Text that will be used as a URI.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. -->
            <flag name="textUri" value="0x00000011" />
            <!-- Text that will be used as an e-mail address.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. -->
            <flag name="textEmailAddress" value="0x00000021" />
            <!-- Text that is being supplied as the subject of an e-mail.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. -->
            <flag name="textEmailSubject" value="0x00000031" />
            <!-- Text that is the content of a short message.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. -->
            <flag name="textShortMessage" value="0x00000041" />
            <!-- Text that is the content of a long message.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. -->
            <flag name="textLongMessage" value="0x00000051" />
            <!-- Text that is the name of a person.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. -->
            <flag name="textPersonName" value="0x00000061" />
            <!-- Text that is being supplied as a postal mailing address.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. -->
            <flag name="textPostalAddress" value="0x00000071" />
            <!-- Text that is a password.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. -->
            <flag name="textPassword" value="0x00000081" />
            <!-- Text that is a password that should be visible.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. -->
            <flag name="textVisiblePassword" value="0x00000091" />
            <!-- Text that is being supplied as text in a web form.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. -->
            <flag name="textWebEditText" value="0x000000a1" />
            <!-- Text that is filtering some other data.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. -->
            <flag name="textFilter" value="0x000000b1" />
            <!-- Text that is for phonetic pronunciation, such as a phonetic name
                 field in a contact entry.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. -->
            <flag name="textPhonetic" value="0x000000c1" />
            <!-- Text that will be used as an e-mail address on a web form.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. -->
            <flag name="textWebEmailAddress" value="0x000000d1" />
            <!-- Text that will be used as a password on a web form.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_TEXT} |
                 {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. -->
            <flag name="textWebPassword" value="0x000000e1" />
            <!-- A numeric only field.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_NUMBER} |
                 {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. -->
            <flag name="number" value="0x00000002" />
            <!-- Can be combined with <var>number</var> and its other options to
                 allow a signed number.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_NUMBER} |
                 {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. -->
            <flag name="numberSigned" value="0x00001002" />
            <!-- Can be combined with <var>number</var> and its other options to
                 allow a decimal (fractional) number.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_NUMBER} |
                 {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. -->
            <flag name="numberDecimal" value="0x00002002" />
            <!-- A numeric password field.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_NUMBER} |
                 {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. -->
            <flag name="numberPassword" value="0x00000012" />
            <!-- For entering a phone number.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_PHONE}. -->
            <flag name="phone" value="0x00000003" />
            <!-- For entering a date and time.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_DATETIME} |
                 {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. -->
            <flag name="datetime" value="0x00000004" />
            <!-- For entering a date.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_DATETIME} |
                 {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. -->
            <flag name="date" value="0x00000014" />
            <!-- For entering a time.  Corresponds to
                 {@link android.text.InputType#TYPE_CLASS_DATETIME} |
                 {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. -->
            <flag name="time" value="0x00000024" />
        </attr>

        <!-- Additional features you can enable in an IME associated with an editor
             to improve the integration with your application.  The constants
             here correspond to those defined by
             {@link android.view.inputmethod.EditorInfo#imeOptions}. -->
        <attr name="formImeOptions">
            <!-- There are no special semantics associated with this editor. -->
            <flag name="normal" value="0x00000000" />
            <!-- There is no specific action associated with this editor, let the
                 editor come up with its own if it can.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_NULL}. -->
            <flag name="actionUnspecified" value="0x00000000" />
            <!-- This editor has no action associated with it.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. -->
            <flag name="actionNone" value="0x00000001" />
            <!-- The action key performs a "go"
                 operation to take the user to the target of the text they typed.
                 Typically used, for example, when entering a URL.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. -->
            <flag name="actionGo" value="0x00000002" />
            <!-- The action key performs a "search"
                 operation, taking the user to the results of searching for the text
                 the have typed (in whatever context is appropriate).
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. -->
            <flag name="actionSearch" value="0x00000003" />
            <!-- The action key performs a "send"
                 operation, delivering the text to its target.  This is typically used
                 when composing a message.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. -->
            <flag name="actionSend" value="0x00000004" />
            <!-- The action key performs a "next"
                 operation, taking the user to the next field that will accept text.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. -->
            <flag name="actionNext" value="0x00000005" />
            <!-- The action key performs a "done"
                 operation, closing the soft input method.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. -->
            <flag name="actionDone" value="0x00000006" />
            <!-- The action key performs a "previous"
                 operation, taking the user to the previous field that will accept text.
                 Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. -->
            <flag name="actionPrevious" value="0x00000007" />
            <!-- Used to request that the IME should not update any personalized data such as typing
                 history and personalized language model based on what the user typed on this text
                 editing object. Typical use cases are:
                 <ul>
                     <li>When the application is in a special mode, where user's activities are expected
                     to be not recorded in the application's history. Some web browsers and chat
                     applications may have this kind of modes.</li>
                     <li>When storing typing history does not make much sense.  Specifying this flag in
                     typing games may help to avoid typing history from being filled up with words that
                     the user is less likely to type in their daily life.  Another example is that when
                     the application already knows that the expected input is not a valid word (e.g. a
                     promotion code that is not a valid word in any natural language).</li>
                 </ul>
                 <p>Applications need to be aware that the flag is not a guarantee, and some IMEs may
                 not respect it.</p> -->
            <flag name="flagNoPersonalizedLearning" value="0x1000000" />
            <!-- Used to request that the IME never go
                 into fullscreen mode.  Applications need to be aware that the flag is not
                 a guarantee, and not all IMEs will respect it.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. -->
            <flag name="flagNoFullscreen" value="0x2000000" />
            <!-- Like flagNavigateNext, but
                 specifies there is something interesting that a backward navigation
                 can focus on.  If the user selects the IME's facility to backward
                 navigate, this will show up in the application as an actionPrevious
                 at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
                 InputConnection.performEditorAction(int)}.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_PREVIOUS}. -->
            <flag name="flagNavigatePrevious" value="0x4000000" />
            <!-- Used to specify that there is something
                 interesting that a forward navigation can focus on. This is like using
                 actionNext, except allows the IME to be multiline (with
                 an enter key) as well as provide forward navigation.  Note that some
                 IMEs may not be able to do this, especially when running on a small
                 screen where there is little space.  In that case it does not need to
                 present a UI for this option.  Like actionNext, if the
                 user selects the IME's facility to forward navigate, this will show up
                 in the application at
                 {@link android.view.inputmethod.InputConnection#performEditorAction(int)
                 InputConnection.performEditorAction(int)}.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. -->
            <flag name="flagNavigateNext" value="0x8000000" />
            <!-- Used to specify that the IME does not need
                 to show its extracted text UI.  For input methods that may be fullscreen,
                 often when in landscape mode, this allows them to be smaller and let part
                 of the application be shown behind.  Though there will likely be limited
                 access to the application available from the user, it can make the
                 experience of a (mostly) fullscreen IME less jarring.  Note that when
                 this flag is specified the IME may <em>not</em> be set up to be able
                 to display text, so it should only be used in situations where this is
                 not needed.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. -->
            <flag name="flagNoExtractUi" value="0x10000000" />
            <!-- Used in conjunction with a custom action, this indicates that the
                 action should not be available as an accessory button when the
                 input method is full-screen.
                 Note that by setting this flag, there can be cases where the action
                 is simply never available to the user.  Setting this generally means
                 that you think showing text being edited is more important than the
                 action you have supplied.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. -->
            <flag name="flagNoAccessoryAction" value="0x20000000" />
            <!-- Used in conjunction with a custom action,
                 this indicates that the action should not be available in-line as
                 a replacement for the "enter" key.  Typically this is
                 because the action has such a significant impact or is not recoverable
                 enough that accidentally hitting it should be avoided, such as sending
                 a message.    Note that {@link android.widget.TextView} will
                 automatically set this flag for you on multi-line text views.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. -->
            <flag name="flagNoEnterAction" value="0x40000000" />
            <!-- Used to request that the IME should be capable of inputting ASCII
                 characters.  The intention of this flag is to ensure that the user
                 can type Roman alphabet characters in a {@link android.widget.TextView}
                 used for, typically, account ID or password input.  It is expected that IMEs
                 normally are able to input ASCII even without being told so (such IMEs
                 already respect this flag in a sense), but there could be some cases they
                 aren't when, for instance, only non-ASCII input languages like Arabic,
                 Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
                 aware that the flag is not a guarantee, and not all IMEs will respect it.
                 However, it is strongly recommended for IME authors to respect this flag
                 especially when their IME could end up with a state that has only non-ASCII
                 input languages enabled.
                 <p>Corresponds to
                 {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. -->
            <flag name="flagForceAscii" value="0x80000000" />
        </attr>
        <!--圆点文字大小-->
        <attr name="textSize" />
        <!--日历宽度，不包括圆点-->
        <attr name="itemWidth"/>
        <!--日历高度，不包括圆点-->
        <attr name="itemHeight"/>
        <!--周末文字颜色-->
        <attr name="weekTextColor" />
        <!--工作日文字颜色-->
        <attr name="workingDayTextColor"/>
        <!--开始日期，日历开始的可选日期-->
        <attr name="startDate"/>
        <!--结束日期，日历结束的可选日期-->
        <attr name="endDate"/>
        <!--选中样式-->
        <attr name="selectedBg"/>
        <!--默认背景颜色-->
        <attr name="normalBg"/>
        <!--选中文字颜色-->
        <attr name="selectedTextColor"/>
    </declare-styleable>
    <!--日历宽度，不包括圆点-->
    <attr name="itemWidth" format="dimension"/>
    <!--日历高度，不包括圆点-->
    <attr name="itemHeight" format="dimension"/>
    <!--周末文字颜色-->
    <attr name="weekTextColor" format="reference|color" />
    <!--工作日文字颜色-->
    <attr name="workingDayTextColor" format="reference|color" />
    <!--开始日期，日历开始的可选日期-->
    <attr name="startDate" format="string" />
    <!--结束日期，日历结束的可选日期-->
    <attr name="endDate" format="string" />
    <!--选中样式-->
    <attr name="selectedBg" format="reference" />
    <!--默认背景颜色-->
    <attr name="normalBg" format="reference" />
    <!--选中文字颜色-->
    <attr name="selectedTextColor" format="reference|color" />
    <declare-styleable name="CalendarView">
        <!--圆点文字大小-->
        <attr name="textSize" />
        <!--圆点宽度-->
        <attr name="dotWidth" format="dimension"/>
        <!--圆点高度-->
        <attr name="dotHeight" format="dimension"/>
        <!--日历宽度，不包括圆点-->
        <attr name="itemWidth"/>
        <!--日历高度，不包括圆点-->
        <attr name="itemHeight"/>
        <!--周末文字颜色-->
        <attr name="weekTextColor" />
        <!--工作日文字颜色-->
        <attr name="workingDayTextColor"/>
        <!--开始日期，日历开始的可选日期-->
        <attr name="startDate"/>
        <!--结束日期，日历结束的可选日期-->
        <attr name="endDate"/>
        <!--是否显示底部圆点-->
        <attr name="showDot" format="boolean" />
        <!--选中样式-->
        <attr name="selectedBg"/>
        <!--默认背景颜色-->
        <attr name="normalBg"/>
        <!--选中文字颜色-->
        <attr name="selectedTextColor"/>
        <!--日历模式：0-单选，1-范围-->
        <attr name="calendarMode" format="enum">
            <enum name="single" value="0" />
            <enum name="range" value="1" />
        </attr>
    </declare-styleable>
</resources>