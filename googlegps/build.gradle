plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
}

android {
    namespace 'com.casic.otitan.googlegps'
    compileSdkVersion libs.versions.compileSdkVersion.get().toInteger()
    defaultConfig {
        minSdk = libs.versions.minSdkVersion.get().toInteger()
        targetSdk = libs.versions.targetSdkVersion.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            resValue "string", "gps_config_file", "prod.properties"
            buildConfigField "boolean", "LOG_DEBUG", "false"// 不显示log
            minifyEnabled false// 混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //新版混淆添加以下代码：，如果只添加上面会导致混淆规则一直无效；
            consumerProguardFiles 'consumer-rules.pro'
        }
        debug {
            resValue "string", "gps_config_file", "dev.properties"
            buildConfigField "boolean", "LOG_DEBUG", "true"// 显示log
            minifyEnabled false// 混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17) // Match with Kotlin jvmTarget
        }
    }
    buildFeatures {
        viewBinding true
        //noinspection DataBindingWithoutKapt
        dataBinding true
        buildConfig true
    }
}

dependencies {

    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.appcompat
    implementation libs.material
    testImplementation libs.junit
    implementation libs.netty.all
    implementation libs.org.apache.commons.commons.lang3
}
//执行以下命令完成制品推送
//推送命令
//gradle publish
//# 如果你的项目使用了gradle wrapper组件的话请使用以下命令
//# ./gradlew publish
apply plugin: 'maven-publish'

// 任务注册：生成源代码 JAR
tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set("sources") // 设置 classifier 为 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar // 将源码 JAR 添加到 artifacts
}

afterEvaluate {
    publishing {
        publications {
            plugin(MavenPublication) {
                // 发布源码 JAR，确保 classifier 为 'sources'，并且 extension 为 'jar'
                artifact(androidSourcesJar)
                artifact("$buildDir/outputs/aar/${artifactId}-release.aar")
                groupId = 'com.casic.otitan.googlegps'
                artifactId = 'googlegps'
                version = '2.0.0'
            }
        }
        repositories {
            maven {
                url = 'https://packages.aliyun.com/maven/repository/2405978-release-ObRSGq/'
                credentials {
                    username = System.getenv("ALIYUN_USER_NAME")
                    password = System.getenv("ALIYUN_PASSWORD")
                }
            }
            maven {
                url = 'https://packages.aliyun.com/maven/repository/2405978-snapshot-rT6GM2/'
                credentials {
                    username = System.getenv("ALIYUN_USER_NAME")
                    password = System.getenv("ALIYUN_PASSWORD")
                }
            }
        }
    }
}