plugins {
    alias(libs.plugins.android.library)
}

android {
    namespace 'com.casic.otitan.mqttcomponent'
    compileSdkVersion libs.versions.compileSdkVersion.get().toInteger()
    defaultConfig {
        minSdk = libs.versions.minSdkVersion.get().toInteger()
        targetSdk = libs.versions.targetSdkVersion.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            resValue "string", "app_config_file", "prod.properties"
            buildConfigField "boolean", "DEBUG", "false"// 不显示log
            minifyEnabled true// 混淆
            zipAlignEnabled true// Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //新版混淆添加以下代码：，如果只添加上面会导致混淆规则一直无效；
            consumerProguardFiles 'proguard-rules.pro'
        }
        debug {
            resValue "string", "app_config_file", "dev.properties"
            buildConfigField "boolean", "DEBUG", "true"// 显示log
            minifyEnabled false// 混淆
            zipAlignEnabled false// Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation libs.androidx.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation libs.paho.org.eclipse.paho.mqttv5.client
    implementation libs.mmkv
}